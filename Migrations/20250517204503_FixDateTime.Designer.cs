// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OntuPhdApi.Data;
using OntuPhdApi.Models.ApplyDocuments;
using OntuPhdApi.Models.Defense;

#nullable disable

namespace OntuPhdApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517204503_FixDateTime")]
    partial class FixDateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OntuPhdApi.Models.ApplyDocuments.ApplyDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Requirements>>("OriginalsRequired")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<Requirements>>("Requirements")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("ApplyDocuments");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Authorization.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("text");

                    b.Property<long?>("ExpiresAt")
                        .HasColumnType("bigint");

                    b.Property<string>("IdToken")
                        .HasColumnType("text");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ProviderAccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Scope")
                        .HasColumnType("text");

                    b.Property<string>("SessionState")
                        .HasColumnType("text");

                    b.Property<string>("TokenType")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Authorization.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime?>("EmailVerified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Authorization.VerificationToken", b =>
                {
                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Identifier", "Token");

                    b.ToTable("VerificationTokens");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Defense.DefenseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CandidateDegree")
                        .HasColumnType("text");

                    b.Property<string>("CandidateNameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DefenseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefenseTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<DefenseFile>>("Files")
                        .HasColumnType("jsonb");

                    b.Property<List<CompositionOfRada>>("Members")
                        .HasColumnType("jsonb");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Placeholder")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.PrimitiveCollection<List<string>>("ScienceTeachers")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Defenses");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Documents.DocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Employees.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OntuPhdApi.Models.News.NewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("OtherTags")
                        .HasColumnType("jsonb");

                    b.PrimitiveCollection<List<string>>("PhotoPaths")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Area", b =>
                {
                    b.Property<int>("ProgramCharacteristicsId")
                        .HasColumnType("integer");

                    b.Property<string>("Aim")
                        .HasColumnType("text");

                    b.Property<string>("Instruments")
                        .HasColumnType("text");

                    b.Property<string>("Methods")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("Theory")
                        .HasColumnType("text");

                    b.HasKey("ProgramCharacteristicsId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ControlForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramComponentId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProgramComponentId");

                    b.ToTable("ControlForms");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.FieldOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FieldOfStudies");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Institute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.LinkFaculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("LinkFaculties");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.OverallCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgramCompetenceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramCompetenceId");

                    b.ToTable("OverallCompetences");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCharacteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Features")
                        .HasColumnType("text");

                    b.Property<string>("Focus")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId")
                        .IsUnique();

                    b.ToTable("ProgramCharacteristics");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IntegralCompetence")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId")
                        .IsUnique();

                    b.ToTable("ProgramCompetences");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentCredits")
                        .HasColumnType("integer");

                    b.Property<int?>("ComponentHours")
                        .HasColumnType("integer");

                    b.Property<string>("ComponentName")
                        .HasColumnType("text");

                    b.Property<string>("ComponentType")
                        .HasColumnType("text");

                    b.Property<int>("ProgramId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramComponents");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ProgramDocuments");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.SpecialCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgramCompetenceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramCompetenceId");

                    b.ToTable("SpecialCompetences");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("FieldCode")
                        .HasColumnType("text");

                    b.Property<int>("FieldOfStudyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FieldOfStudyId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.ProgramModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accredited")
                        .HasColumnType("boolean");

                    b.Property<int?>("Credits")
                        .HasColumnType("integer");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descriptions")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Directions")
                        .HasColumnType("jsonb");

                    b.Property<int?>("FieldOfStudyId")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Form")
                        .HasColumnType("jsonb");

                    b.Property<int?>("InstituteId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameCode")
                        .HasColumnType("text");

                    b.Property<string>("Objects")
                        .HasColumnType("text");

                    b.Property<int?>("ProgramDocumentId")
                        .HasColumnType("integer");

                    b.Property<string>("Purpose")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Results")
                        .HasColumnType("jsonb");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("integer");

                    b.Property<int?>("Years")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FieldOfStudyId");

                    b.HasIndex("InstituteId");

                    b.HasIndex("ProgramDocumentId")
                        .IsUnique();

                    b.HasIndex("SpecialityId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Roadmap.RoadmapModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalTime")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roadmaps");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Authorization.Account", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Authorization.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Defense.DefenseModel", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Area", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.ProgramCharacteristics", "ProgramCharacteristics")
                        .WithOne("Area")
                        .HasForeignKey("OntuPhdApi.Models.Programs.Components.Area", "ProgramCharacteristicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramCharacteristics");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ControlForm", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.ProgramComponent", "ProgramComponent")
                        .WithMany("ControlForms")
                        .HasForeignKey("ProgramComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramComponent");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Job", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "ProgramModel")
                        .WithMany("Jobs")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramModel");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.LinkFaculty", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "ProgramModel")
                        .WithMany("LinkFaculties")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramModel");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.OverallCompetence", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.ProgramCompetence", "ProgramCompetence")
                        .WithMany("OverallCompetences")
                        .HasForeignKey("ProgramCompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramCompetence");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCharacteristics", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "Program")
                        .WithOne("ProgramCharacteristics")
                        .HasForeignKey("OntuPhdApi.Models.Programs.Components.ProgramCharacteristics", "ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCompetence", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "Program")
                        .WithOne("ProgramCompetence")
                        .HasForeignKey("OntuPhdApi.Models.Programs.Components.ProgramCompetence", "ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramComponent", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.ProgramModel", "ProgramModel")
                        .WithMany("ProgramComponents")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramModel");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.SpecialCompetence", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.ProgramCompetence", "ProgramCompetence")
                        .WithMany("SpecialCompetences")
                        .HasForeignKey("ProgramCompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramCompetence");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Speciality", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.FieldOfStudy", "FieldOfStudy")
                        .WithMany("Specialities")
                        .HasForeignKey("FieldOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FieldOfStudy");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.ProgramModel", b =>
                {
                    b.HasOne("OntuPhdApi.Models.Programs.Components.FieldOfStudy", "FieldOfStudy")
                        .WithMany("Programs")
                        .HasForeignKey("FieldOfStudyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OntuPhdApi.Models.Programs.Components.Institute", "Institute")
                        .WithMany()
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OntuPhdApi.Models.Programs.Components.ProgramDocument", "ProgramDocument")
                        .WithOne("Program")
                        .HasForeignKey("OntuPhdApi.Models.Programs.ProgramModel", "ProgramDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OntuPhdApi.Models.Programs.Components.Speciality", "Speciality")
                        .WithMany("Programs")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("FieldOfStudy");

                    b.Navigation("Institute");

                    b.Navigation("ProgramDocument");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Authorization.User", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.FieldOfStudy", b =>
                {
                    b.Navigation("Programs");

                    b.Navigation("Specialities");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCharacteristics", b =>
                {
                    b.Navigation("Area")
                        .IsRequired();
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramCompetence", b =>
                {
                    b.Navigation("OverallCompetences");

                    b.Navigation("SpecialCompetences");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramComponent", b =>
                {
                    b.Navigation("ControlForms");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.ProgramDocument", b =>
                {
                    b.Navigation("Program");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.Components.Speciality", b =>
                {
                    b.Navigation("Programs");
                });

            modelBuilder.Entity("OntuPhdApi.Models.Programs.ProgramModel", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("LinkFaculties");

                    b.Navigation("ProgramCharacteristics");

                    b.Navigation("ProgramCompetence");

                    b.Navigation("ProgramComponents");
                });
#pragma warning restore 612, 618
        }
    }
}
